I. Primitive Types, Bit Manipulation
1. Compute word parity
2. Swap bits
3. Reverse bits**
4. Find closest integer with same weight
5. X x Y without arithmetic operators
6. X / Y
7. X^Y
8. Reverse digits
9. Is Number a Palindrome
10. Generate uniform random numbers using coin
11. Rectangle intersection

II. Arrays, Resizable Arrays, Multidimensional Arrays
1. Dutch National Flag*
2. Increment very big integers
3. Multiply very big integers*
4. Advancing through array*
5. Delete duplicates from sorted array
6. Buy and sell stock once
7. Buy and sell stock twice*
8. Enumerate all primes to n
9. Permute elements of array*
10. Compute next permutation*
11. Sample offline data
12. Sample online data
13. Compute random permutation
14. Compute random subset*
15. Generate nonuniform random numbers
16. Sudoku checker
17. Spiral ordering of 2D array*
18. Rotate 2D array*
19. Compute rows in Pascal's triangle

III. Strings
1. Interconvert strings and integers
2. Base conversion
3. Spreadsheet column encoding
4. Replace and remove
5. Check if palindrome
6. Reverse words in sentence
7. Compute mnemonics for a phone number
8. Look-and-say problem
9. Roman to decimal
10. Compute all valid IP addresses
11. Write string sinusoidally
12. Run-length encoding
13. Find occurrence of substring

IV. Linked Lists
1. Merge sorted lists
2. Reverse sublist
3. Test cyclicity
4. Test for overlapping lists - lists are cycle-free
5. Test for overlapping lists - lists may have cycles
6. Delete node from singly-liked list
7. Remove kth last element fro linked list
8. Remove duplicates from sorted linked list
9. Implement cyclic right shift for singly linked lists
10. Even-odd merge
11. Is singly-linked list palindromic
12. List pivoting
13. Add list-based integers

V. Stacks and Queues
1. Stack with Max
2. Evaluate RPN expressions
3. Test string over {}()[] for well-formedness
4. Normalize pathnames
5. Search postings list
6. Compute buildings with sunset view
7. Compute binary tree nodes in order of increasing depth
8. Cicular queue
9. Implement queue using stacks
10. Queue with Max

VI. Binary Trees
1. Is binary tree height-balanced
2. Is binary tree symmetric
3. Lowest common ancestor in binary tree
4. LCA when nodes have parent pointers
5. Sum the root-to-leaf paths in binary tree
6. Find root-to-leaf path with specified sum
7. Iterative Inorder traversal
8. Iterative Preorder traversal
9. Kth node in inorder traversal
10. Compute successor
11. Inorder traversal with O(1) space
12. Reconstruct binary tree from traversal data
13. Reconstruct binary tree from preorder traversal with markers
14. Form linked list from leaves of binary tree
15. Exterior of binary tree
16. Right sibling tree
17. Implement lockin in binary tree

VII. Heaps
1. Merge sorted files
2. Sort an increasing-decreasing array
3. Sort almost-sorted array
4. k-closest stars
5. Median of online data
6. k largest elements in max-heap
7. Implement stack using a heap

VIII. Searching
1. Search sorted array for first occurence of k
2. Search sorted array for entry equal to its index
3. Search cyclically sorted array
4. Compute integer square root
5. Compute real square root
6. Search in 2D sorted array
7. Find min and max simultaneously
8. kth largest element
9. Find missing IP addresses
10. Find duplicate and missing elements

IX. Hash Tables
1. Test palindromic permutations
2. Is anonymous letter constructible
3. Implement ISBN cache
4. Compute LCA, optimizing for close ancestors
5. k most frequent queries
6. Find nearest repeated entries in array
7. Find smallest subarray covering all values
8. Find smallest subarray sequentially covering all values
9. Find longest subarray with distinct entries
10. Length of longest contained interval
11. Average of top three scores
12. All string decompositions
13. Collatz conjecture
14. Hash function for chess

X. Sorting
1. Intersection of two sorted arrays
2. Merge two sorted arrays
3. Remove first-name duplicates
4. Render calendar
5. Merging intervals
6. Compute union of intervals
7. Partitioning and sorting array with many repeated entries
8. Team photo day - 1
9. Fast sorting algorithm for lists
10. Salary treshold

XI. Binary Search Trees
1. Is binary tree BST
2. Find first key greater than given value in BST
3. k largest in BST
4. LCA in BST
5. Reconstruct BST from traversal data
6. Closest entries in three sorted arrays
7. Enumerate numbers of the form a + bâˆš2
8. Most visited pages
9. Minimum height BST from sorted array
10. Insetion and Deletion in BST
11. Are three BST nodes totally ordered
12. Range lookup
13. Add credits

XII. Recursion
1. Towers of Hanoi
2. All non-attacking placements of n-Queens
3. Generate Permutations
4. Generate Power Set
5. Generate All Subsets of size k
6. Generate Strings of matched parens
7. Generate Palindromic Decompositions
8. Generate Binary Trees
9. Sudoku solver
10. Gray code
11. Diameter of a Tree

XIII. Dynamic Programming
1. Number of Score Combinations
2. Levenshtein distance
3. Ways to Traverse 2D array
4. Binomial Coefficients
5. Search for a sequence in a 2D array
6. Knapsack Problem
7. bedbathandbeyond.com problem
8. Minimum weight path in triangle
9. Pick up coins for maximum gain
10. Number of moves to climb stairs
11. Pretty Printing problem
12. Longest Nondecreasing subsequence

XIV. Greedy Algorithms and Invariants
1. Optimum assignment of tasks
2. Schedule to minimize waiting time
3. Interval covering problem
4. 3SUM
5. Majority Element
6. Gasup
7. Maximum water trapped by vertical line pair
8. Largest rectangle under the skyline

XV. Graphs
1. Search a maze
2. Paint Boolean Matrix
3. Compute Enclosed Regions
4. Deadlock detection
5. Clone a graph
6. Making wired connections
7. Transform one string to another
8. Team photo day - 2
9. Shortest distance with fewest edges

XVI. Parallel Computing
1. Caching for multithreaded dictionary
2. Analyze two unsynchronized interleaved threads
3. Synchronize two interleaving threads
4. Implement thread pool
5. Deadlock
6. Readers-Writers problem
7. Readers-Writers problem with write preference
8. Implement Timer class
9. Parallel Collatz conjecture

XVII. Design Problems
1. Spell checker
2. Solution to stemming problem
3. Plagiarism detector
4. Pair users by attributes
5. System for detecting copyright infringement
6. TEX
7. Search engine
8. PageRank
9. TeraSort and PetaSort
10. Distributed throttling
11. Scalable priority system
12. Photomosaics
13. Mileage Run
14. Connexus
15. Online Advertising system
16. Recommendation system
17. Distributing large file
18. Design the World Wide Web
19. Hardware cost of photo sharing app

XVIII. Java Language Questions
1. The JVM
2. throw vs. throws
3. final, finally, and finalizer
4. equals() vs. ==
5. equals() and hashCode()
6. List, ArrayList, and LinkedList
7. String vs. StringBuilder
8. Autoboxing
9. Static initialization

XIX. Object-Oriented Design
1. Template Method vs. Strategy
2. Observer Pattern
3. Push vs. Pull Observer Pattern
4. Singletons and Flyweights
5. Adapters
6. Creational Patterns
7. Libraries and Design Patterns

XX. Common Tools
1. Merging in VCS
2. Hooks
3. Is scripting more efficient?
4. Polymorphism with a scripting language
5. Dependency analysis
6. ANT vs. Maven
7. SQL vs. NoSQL
8. Normalization
9. SQL Design
10. IP, TCP, and HTTP
11. HTTPS
12. DNS

XXI. Honors Class - Moderate
1. GCD
2. Find first missing positive entry
3. Max product of all entries except one
4. Longest contiguous increasing subarray
5. Rotate an array
6. Identify positions attacked by rooks
7. Justify text
8. Implement list zipping
9. Copy a postings list
10. Longest substring with matching parens
11. Maximum of sliding window
12. Postorder traversal without recursion
13. Fair bonuses
14. Search sorted array of unknown length
15. Find line through most points
16. Shortest unique prefix
17. Most visited pages in a window
18. Convert BST to sorted doubly-linked list
19. View from above
20. Implement Regex matching
21. Synthesize an expression
22. Count inversions
23. Draw the skyline
24. Measure with defective jugs
25. Maximum subarray in circular array
26. Critical height
27. Huffman coding
28. Trapping water
29. Search pair-sum in abs-sorted array
30. Heavy hitter
31. Road network
32. Is arbitrage possible?

XXII. Honors Class - Hard
1. Buy and sell stock k times
2. Search in two sorted arrays
3. kth largest element - large n, small k
4. Find element that appears only once
5. Convert sorted doubly-linked list into BST
6. Merge two BSTs
7. Maximum 2D subarray
8. Longest subarray with sum <= k
