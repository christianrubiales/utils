I. Time Complexity

II. Arrays

a. Array Math

1. Min Steps in Infinite Grid
2. Add One To Number**
3. Max Sum Contiguous Subarray
4. Maximum Absolute Difference
5. Repeat and Missing Number Array
6. Flip


b. Simulation Array

1. Max Non Negative SubArray
2. Spiral Order Matrix II
3. Pascal Triangle
4. Kth Row of Pascal's Triangle√
5. Antidiagonals


c. Bucketing

1. Noble Integer
2. Triplets with Sum between given range
3. Largest Number**
4. Wave Array
5. Hotel Bookings Possible
6. Max Distance
7. Maximum Unsorted Subarray
8. Find Duplicate in Array
9. Maximum Consecutive Gap


d. Arrangement

1. Largest Number**
2. Rotate Matrix
3. Next Permutation
4. Find Permutation


e. Value Ranges

1. Merge Intervals
2. Merge Overlapping Intervals**


f. Bucketing or Sorting

1. Hotel Bookings Possible
2. Wave Array
3. Largest Number**
4. Max Distance
5. Maximum Unsorted Subarray
6. Find Duplicate in Array
7. Maximum Consecutive Gap


g. Space Recycle

1. Set Matrix Zeros**
2. First Missing Integer


h. Missing / Repeated Number

1. First Missing Integer
2. Repeat and Missing Number Array
3. Find Duplicate in Array
4. N/3 Repeat Number**


II. Math

Primers

1. MATH_BUG01
2. MATH_BUG02


Examples

1. All Factors
2. Verify Prime
3. Prime Numbers
4. Binary Representation


a. Adhoc

1. Prime Sum
2. Sum of pairwise Hamming Distance
3. FizzBuzz
4. Power Of Two Integers


b. Array dp

1. Numbers of length N and value less than K


c. Number encoding

1. Rearrange Array**


d. Combinatorics

1. Grid Unique Paths


e. Base conversion

1. Excel Column Number
2. Excel Column Title


f. Digit op

1. Palindrome Integer
2. Reverse integer**


g. Number theory

1. Greatest Common Divisor
2. Trailing Zeros in Factorial
3. Sorted Permutation Rank
4. Largest Coprime Divisor
5. Sorted Permutation Rank with Repeats


Checkpoint 2

1. Pretty Print Matrix**


IV. Binary Search

Examples

1. Count Element Occurence
2. Rotated Array


a. Search answer

1. Matrix Median
2. Square Root of Integer**
3. Painter's Partition Problem
4. Allocate Books


b. Simple binary search

1. Matrix Search
2. Search for a Range
3. Sorted Insert Position**


c. Search step simulation

1. Implement Power Function**


d. Sort modification

1. Rotated Sorted Array Search**
2. Median of Array


V. Strings


a. String simulation

1. Palindrome String
2. Longest Common Prefix
3. Count And Say**


b. String tricks

1. Minimum Characters required to make a String Palindromic**
2. Longest Palindromic Substring


c. String search

1. Minimum Characters required to make a String Palindromic**
2. Implement StrStr


d. String parsing

1. Minimum Characters required to make a String Palindromic**
2. Compare Version Numbers
3. Atoi
4. Valid Number
5. Valid Ip Addresses


e. Words

1. Length of Last Word**
2. Reverse the String


f. String math

1. Roman To Integer
2. Integer To Roman
3. Add Binary Strings**
4. Power of 2
5. Multiply Strings


g. Pretty print

1. Justified Text
2. Zigzag String
3. Pretty Json


VI. Bit Manipulation

a. Bucketing

1. Min XOR value**


b. Bit play

1. Number of 1 Bits**
2. Reverse Bits
3. Divide Integers
4. Different Bits Sum Pairwise


c. Bit array

1. Single Number**
2. Single Number II


VII. Two Pointers

a. Two pointer

1. Minimize the absolute difference**


b. Sorting

1. 3 Sum
2. 3 Sum Zero**
3. Counting Triangles
4. Diffk


c. Multiple arrays

1. Intersection Of Sorted Arrays**
2. Merge Two Sorted Lists II


d. Inplace update

1. Remove Duplicates from Sorted Array**
2. Remove Duplicates from Sorted Array II
3. Remove Element from Array
4. Sort by Color


e. Tricks

1. Max Continuous Series of 1s
2. Array 3 Pointers
3. Container With Most Water**


Checkpoint 3

1. Kth Smallest Element in the Array
2. NUMRANGE*


VIII. Linked Lists


Examples

1. Intersection of Linked Lists
2. Reverse Linked List


a. List 2 pointer

1. Palindrome List
2. Remove Duplicates from Sorted List
3. Remove Duplicates from Sorted List II
4. Merge Two Sorted Lists
5. Remove Nth Node from List End
6. Rotate List
7. Reverse Link List II
8. Reorder List


b. Pointer move

1. K reverse linked list
2. Swap List Nodes in pairs
3. Reverse Link List II
4. Reorder List


c. List math

1. Add Two Numbers as Lists
2. List Cycle**


d. List sort

1. Partition List**
2. Insertion Sort List
3. Sort List


e. List trick

1. Reverse Link List II
2. Reorder List


f. List cycle

1. List Cycle**


IX. Stacks and Queues


Examples

1. Generate all Parentheses
2. Reverse String


a. Stack simple

1. Simplify Directory Path**
2. Redundant Braces


b. Cleverstack

1. Nearest Smaller Element
2. Largest Rectangle in Histogram
3. Sliding Window Maximum**


c. Stack math

1. Evaluate Expression**
2. Rain Water Trapped


d. Multiple stack

1. Min Stack**


Checkpoint 4

1. Linked List Half Subtraction
2. Next Greater Element**


X. Backtracking


Examples

1. Modular Expression
2. Reverse Link List Recursion


a. Subsets

1. Subset√
2. Combinations
3. Combination Sum
4. Combination Sum II
5. Combination Sum II


b. Bruteforce builder

1. Letter Phone**
2. Palindrome Partitioning
3. Generate all Parentheses II


c. Pruned builder

1. Palindrome Partitioning
2. Generate all Parentheses II
3. NQueens**
4. Sudoku


d. Permutations

1. Permutations**


e. Maths and backtracking

1. Gray Code√
2. Kth Permutation Sequence**


f. Game solving

1. NQueens
2. Sudoku**


XI. Hashing

a. Hash search

1. Colorful Number
2. Largest Continuous Sequence Zero Sum
3. 2 Sum**
4. 4 Sum
5. Valid Sudoku
6. Diffk II


b. Key formation

1. Anagrams**
2. Equal
3. Copy List


c. Hashing two pointer

1. Longest Substring Without Repeat**
2. Window String


d. Maths and hashing

1. Fraction**
2. Points on the Straight Line


e. Incremental hash

1. Substring Concatenation**


Checkpoint 5

1. All Unique Permutations
2. Longest Consecutive Sequence**


XII. Heaps and Maps

a. Heap

1. N max pair combinations*
2. Magician and Chocolates
3. Merge K Sorted Lists


b. Heapmap

1. Distinct Numbers in Window**
2. LRU Cache


c. Math

1. Ways to form Max Heap*


XIII. Trees

Examples

1. Next Greater Number BST
2. Valid Binary Search Tree

a. Traversal

1. Vertical Order traversal of Binary Tree	
2. Inorder Traversal√
3. Postorder Traversal
4. Preorder Traversal


b. Level order

1. ZigZag Level Order Traversal BT
2. Populate Next Right Pointers Tree


c. Tries

1. Hotel Reviews


d. Root to leaf

1. Path Sum
2. Root to Leaf Paths With Sum
3. Max Depth of Binary Tree√
4. Min Depth of Binary Tree
5. Sum Root to Leaf Numbers


e. Simple tree ops

1. Balanced Binary Tree


f. 2 trees

1. Identical Binary Trees√
2. Symmetric Binary Tree


g. Trie

1. Shortest Unique Prefix


h. Tree construction

1. Inorder Traversal of Cartesian Tree
2. Sorted Array To Balanced BST
3. Construct Binary Tree From Inorder And Postorder
4. Construct Binary Tree From Inorder And Preorder


i. Tree search

1. Least Common Ancestor


j. Linkedlist tree

1. Flatten Binary Tree to Linked List


k. Bst traversal

1. Kth Smallest Element In Tree**
2. 2-Sum Binary Tree
3. BST Iterator
4. Recover Binary Search Tree


l. Interval tree

1. Order of People Heights


m. Inplace change

1. Invert the Binary Tree√


Checkpont 6

1. Number of Inversions in an Array*
2. Next Pointer Binary Tree**


XIV. Dynamic Programming

a. Simple array dp

1. Length of Longest Subsequence
2. Ways to Decode
3. Stairs
4. Intersecting Chords in a Circle
5. Largest area of rectangle with permutations


b. 2d string dp

1. Edit Distance
2. Longest Increasing Subsequence
3. Repeating Sub-Sequence
4. Distinct Subsequences
5. Interleaving Strings
6. Regular Expression Match
7. Regular Expression II
8. Scramble String


c. Greedy or dp

1. Tushar's Birthday Bombs
2. Jump Game Array
3. Min Jumps Array


d. Matrix dp

1. Min Sum Path in Matrix
2. Dungeon Princess
3. Min Sum Path in Triangle
4. Unique Paths in a Grid
5. Max Rectangle in Binary Matrix
6. Rod Cutting
7. Queen Attack


e. Dp tricky

1. Longest Arithmetic Progression
2. N digit numbers with digit sum S
3. Ways to color a 3xN Board
4. Shortest common superstring
5. Kth Manhattan Distance Neighbourhood
6. Coins in a Line
7. Evaluate Expression To True
8. Longest valid Parentheses
9. Best Time to Buy and Sell Stocks III


f. Multiply dp

1. Intersecting Chords in a Circle
2. Unique Binary Search Trees II
3. Count Permutations of BST


g. Suffix / prefix dp

1. Sub Matrices with sum Zero
2. Coin Sum Infinite
3. Best Time to Buy and Sell Stocks I
4. Max Product Subarray
5. Arrange II


h. Preprocess dp

1. Max Rectangle in Binary Matrix


i. Dp optimized backtrack

1. Word Break II


j. Knapsack

1. N digit numbers with digit sum S
2. Tushar's Birthday Party
3. Flip Array
4. Equal Average Partition


k. Tree dp

1. Max Sum Path in Binary Tree


l. Breaking words

1. Word Break
2. Palindrome Partitioning II
3. Scramble String


m. Adhoc

1. Best Time to Buy and Sell Stocks II
2. Largest area of rectangle with permutations


n. Derived dp

1. Max Sum Without Adjacent Elements


XV. Greedy


a. Bucket 1

1. Distribute Candy
2. Assign Mice to Holes√


b. Bucket 2

1. Gas Station**


c. Bucket 3

1. Majority Element√


d. Bucket 4

1. Seats**


e. Bucket 5

1. Highest Product**


f. Bucket 6

1. Bulbs**


Chcekpoint 7

1. Unique Binary Search Trees**


XVI. Graphs

a. Bfs

1. Smallest sequence with given Primes
2. Valid Path
3. Level Order
4. Smallest Multiple With 0 and 1


b. Graph adhoc

1. Convert Sorted List to Binary Search Tree


c. Shortest path

1. Sum Of Fibonacci Numbers
2. Knight On Chess Board
3. Word Ladder I
4. Word Ladder II


d. Graph connectivity

1. Commutable Islands
2. Possibility of finishing all courses given pre-requisites
3. Valid Path
4. Black Shapes
5. Capture Regions on Board


e. Graph hashing

1. Clone Graph


f. Depth first search

1. Largest Distance between nodes of a Tree


g. Graph traversal

1. Level Order
2. Stepping Numbers
3. Capture Regions on Board
4. Word Search Board
